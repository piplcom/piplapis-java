name: mvn release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: build and deploy maven library to central
    runs-on: ubuntu-latest

    steps:

      - name: Deploying GitHub Actions Lib
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@4637f7c31534ec06928b10da807735657a921266
        with:
          servers: '[ {"id": "ossrh", "username": "${{secrets.CENTRAL_WRITE_PACKAGES_USER}}", "password": "${{secrets.CENTRAL_WRITE_PACKAGES_TOKEN}}" }, { "id": "github", "username": "${{secrets.PRIVATE_WRITE_PACKAGES_USER}}", "password": "${{secrets.PRIVATE_WRITE_PACKAGES_TOKEN}}" }, { "id": "github-snapshot", "username": "${{secrets.PRIVATE_WRITE_PACKAGES_USER}}", "password": "${{secrets.PRIVATE_WRITE_PACKAGES_TOKEN}}" }, { "id": "github-release", "username": "${{secrets.PRIVATE_WRITE_PACKAGES_USER}}", "password": "${{secrets.PRIVATE_WRITE_PACKAGES_TOKEN}}" }, { "id": "central-release", "username": "${{secrets.CENTRAL_WRITE_PACKAGES_USER}}", "password": "${{secrets.CENTRAL_WRITE_PACKAGES_TOKEN}}" }]'

      - name: print metadata
        run: echo ${{github.ref}}

      - name: Set release version
        if: github.ref == 'refs/heads/master'
        run: |
          sed -i "s/-SNAPSHOT<\/version>/<\/version>/1" pom.xml

      - name: Set snapshot version
        if: github.ref != 'refs/heads/master'
        run: |
          build_date=`date -u +"%Y%m%d%H%M%S"`
          branch_name=`echo ${GITHUB_REF##*\/} | sed 's/^.*\/\([^\/]*\)$/\1/' | sed "s/[^[:alnum:]-]//g"`
          sed -i "s/-SNAPSHOT<\/version>/-$build_date-$branch_name<\/version>/1" pom.xml

      - name: Set distribution repo
        if: github.ref == 'refs/heads/master'
        run: |
          find_token='<distributionManagement\/>'
          dist_repo='<distributionManagement><repository><id>central-release<\/id><name>Maven Central via sonatype.org<\/name><url>https:\/\/oss.sonatype.org\/service\/local\/staging\/deploy\/maven2\/<\/url><uniqueVersion>false<\/uniqueVersion><\/repository><\/distributionManagement>'
          sed -i "s/$find_token/$dist_repo/1" pom.xml

      - name: Set release plugin
        if: github.ref == 'refs/heads/master'
        run: |
          find_token='<!-- RELEASE PLUGIN PLACEHOLDER -->'
          release_plugin='<plugin><groupId>org.sonatype.plugins<\/groupId><artifactId>nexus-staging-maven-plugin<\/artifactId><version>1.6.7<\/version><extensions>true<\/extensions><configuration><serverId>ossrh<\/serverId><nexusUrl>https:\/\/oss.sonatype.org\/<\/nexusUrl><autoReleaseAfterClose>true<\/autoReleaseAfterClose><\/configuration><\/plugin>'
          sed -i "s/$find_token/release_plugin/1" pom.xml

      - name: Maven build and deploy
        run: |
          sudo apt install gnupg
          echo ${{secrets.GPG_SECRET}} | base64 -d | gpg --import --no-tty --batch --yes
          echo ${{secrets.GPG_PUBLIC}} | base64 -d | gpg --import --no-tty --batch --yes
          echo ${{secrets.GPG_PUBLIC}}
          gpg --list-keys
          gpg --keyserver keyserver.ubuntu.com --send-keys 8C813AC7EA05EFF2FE29F61BFE7F1CCBD32C9A39
          gpg --keyserver keys.openpgp.org --send-keys 8C813AC7EA05EFF2FE29F61BFE7F1CCBD32C9A39
          gpg --keyserver pool.sks-keyservers.net --send-keys 8C813AC7EA05EFF2FE29F61BFE7F1CCBD32C9A39
          mvn deploy -Dmaven.test.skip=true -Dgpg.passphrase=${{secrets.GPG_PASSPHRASE}} -Dgpg.useagent=true -Dgpg.defaultKeyring=false -Dgpg.homedir='/home/runner/.gnupg' -Dgpg.publicKeyring='/home/runner/.gnupg/pubring.kbx' -Dgpg.secretKeyring='/home/runner/.gnupg/secring.kbx'
